services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - pg
    container_name: api
    ports:
      - "8000:8000"
    command: gunicorn --bind 0.0.0.0:8000 --workers 4 ChatBackend.wsgi:application
    environment:
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - PG_DB=${PG_DB}
      - PG_HOST=${PG_HOST}
      - PG_PORT=${PG_PORT}
      - DJANGO_SETTINGS_MODULE=ChatBackend.settings
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    depends_on:
      - pg
    volumes:
      - .:/app

  pg:
    container_name: pg
    image: postgres:13
    environment:
      - POSTGRES_DB=${PG_DB}
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
    networks:
      - pg
    volumes:
      - pg-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER}"]
      interval: 10s
      retries: 5
  
  adminer:
    image: adminer
    ports:
      - "8998:8080"
    networks:
      - pg
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - api
    networks:
      - pg

networks:
  pg:
  api:

volumes:
  pg-data:
