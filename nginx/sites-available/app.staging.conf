include /etc/nginx/snippets/cors.conf;

# server {
# 	server_name api.soumya.fun;  # Replace with your actual domain
# 	listen 80;
# 	listen [::]:80;

# 	# Django static and media files root
# 	root /web/app/api/public;

# 	# Default error and access logs
# 	error_log /dev/stdout info;
# 	access_log /dev/stdout combined;

# 	# Additional configs
# 	include /etc/nginx/snippets/fastcgi_params.conf;
# 	include /etc/nginx/snippets/error_pages.conf;
# 	include /etc/nginx/snippets/static.conf;

# 	# Serve static files
# 	location /static/ {
# 		alias /app/static/;  # Static files directory within the Docker container
# 	}

# 	# Serve media files
# 	location /media/ {
# 		alias /app/media/;  # Media files directory within the Docker container
# 	}

# 	# Django application reverse proxy
# 	location / {
# 		proxy_set_header Host $host;
# 		proxy_set_header X-Real-IP $remote_addr;
# 		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
# 		proxy_set_header X-Forwarded-Proto $scheme;
# 		proxy_pass http://api:8000;
# 	}

# 	# Serve favicon and cacheable assets
# 	location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml)$ {
# 		expires 30d;
# 	}

# 	include /etc/nginx/snippets/favicons.conf;
# }
server {
    server_name api.soumya.fun;  # Update with your actual domain name

    location / {
        proxy_pass http://127.0.0.1:8000;  # Forward requests to Django app on port 8000
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Optional: Configure static and media file handling if needed
    location /static/ {
        alias /app/static/;  # Update this path to match where static files are served
    }

    location /media/ {
        alias /app/media/;  # Update this path to match where media files are stored
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/api.soumya.fun/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/api.soumya.fun/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    if ($host = api.soumya.fun) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name api.soumya.fun;
    return 404; # managed by Certbot


}